{"version":3,"file":"plugin.min.js","sources":["../src/plugin.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Generate the QR code.\n *\n * @module     tiny_qrcode/plugin\n * @copyright  2024 Brain Station 23 Ltd. <brainstation-23.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n *\n */\n\nimport {getTinyMCE} from 'editor_tiny/loader';\nimport {getPluginMetadata} from 'editor_tiny/utils';\n\nimport {component, pluginName} from './common';\nimport * as Commands from './commands';\nimport * as Configuration from './configuration';\n\n// eslint-disable-next-line no-async-promise-executor\nexport default new Promise(async(resolve) => {\n    const [\n        tinyMCE,\n        setupCommands,\n        pluginMetadata,\n    ] = await Promise.all([\n        getTinyMCE(),\n        Commands.getSetup(),\n        getPluginMetadata(component, pluginName),\n    ]);\n\n    tinyMCE.PluginManager.add(`${component}/plugin`, (editor) => {\n        //To add a simple triangle icon:\n        editor.ui.registry.addIcon('qrcode', '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"> <rect width=\"20\" height=\"20\" fill=\"white\"/> <rect x=\"1\" y=\"1\" width=\"4\" height=\"4\" fill=\"black\"/> <rect x=\"1\" y=\"15\" width=\"4\" height=\"4\" fill=\"black\"/> <rect x=\"15\" y=\"1\" width=\"4\" height=\"4\" fill=\"black\"/> <rect x=\"15\" y=\"15\" width=\"4\" height=\"4\" fill=\"black\"/> <rect x=\"5\" y=\"1\" width=\"3\" height=\"3\" fill=\"black\"/> <rect x=\"1\" y=\"5\" width=\"3\" height=\"3\" fill=\"black\"/> <rect x=\"5\" y=\"5\" width=\"3\" height=\"3\" fill=\"black\"/> <rect x=\"5\" y=\"10\" width=\"3\" height=\"3\" fill=\"black\"/> <rect x=\"10\" y=\"5\" width=\"3\" height=\"3\" fill=\"black\"/> <rect x=\"10\" y=\"10\" width=\"3\" height=\"3\" fill=\"black\"/> <rect x=\"10\" y=\"15\" width=\"3\" height=\"3\" fill=\"black\"/> <rect x=\"15\" y=\"10\" width=\"3\" height=\"3\" fill=\"black\"/> <rect x=\"15\" y=\"5\" width=\"3\" height=\"3\" fill=\"black\"/> </svg>');\n\n\n        // Setup the Commands (buttons, menu items, and so on).\n        setupCommands(editor);\n\n        return pluginMetadata;\n    });\n\n    // Resolve the Qrcode Plugin and include configuration.\n    resolve([`${component}/plugin`, Configuration]);\n});\n\n\n/// NEEED"],"names":["Promise","async","tinyMCE","setupCommands","pluginMetadata","all","Commands","getSetup","component","pluginName","PluginManager","add","editor","ui","registry","addIcon","resolve","Configuration"],"mappings":";;;;;;;;kMAgCe,IAAIA,SAAQC,MAAAA,gBAEnBC,QACAC,cACAC,sBACMJ,QAAQK,IAAI,EAClB,wBACAC,SAASC,YACT,4BAAkBC,kBAAWC,sBAGjCP,QAAQQ,cAAcC,cAAOH,8BAAqBI,SAE9CA,OAAOC,GAAGC,SAASC,QAAQ,SAAU,q1BAIrCZ,cAAcS,QAEPR,kBAIXY,QAAQ,WAAIR,6BAAoBS"}